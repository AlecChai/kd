<?php/** * 沃尔玛采集数据平台控制器 */class Gm extends MY_Controller{    public function __construct(){        parent::__construct();        $this->load->database();    }    public function index(){        $params = $this->input->post(NULL,true);        $where = "1=1";                if(!empty($params['keyword'])){            $product = $this->db->query("SELECT `id` FROM `cd_product` WHERE `title` LIKE '%{$params['keyword']}%' OR sku LIKE '%{$params['keyword']}%' ")->result_array();            $pro_id_arr = array_column($product, 'id');            $pro_id = $pro_id_arr?$pro_id_arr:[0];            $where .= " AND ( qd_sku LIKE '%".$params['keyword']."%' OR pro_id IN (".implode(',',array_unique($pro_id)).") )";        }        if(!empty($params['category_id'])){            $product = $this->db->query("SELECT `id` FROM `cd_product` WHERE `url_id` = '{$params['category_id']}' ")->result_array();            $pro_id_arr = array_column($product, 'id');            $pro_id = $pro_id_arr?$pro_id_arr:[0];            $where .= " AND  pro_id IN (".implode(',',array_unique($pro_id)).")";        }        if(!empty($params['created_man'])){            $where .= " AND created_man LIKE '%".$params['created_man']."%' ";        }        if(!empty($params['dates']) && isset($params['dates'][0])){            $where .= " AND create_time >= '{$params['dates'][0]}' ";        }        if(!empty($params['dates']) && isset($params['dates'][1])){            $where .= " AND create_time < '{$params['dates'][1]}' ";        }        $currentpage = element('currentPage', $params, 1);        $pagesize = element('pageSize', $params, 10);        $page = ($currentpage - 1) * $pagesize;        $rows = $this->db->limit($pagesize, $page)->where($where)->order_by('id','desc')->get('t_gm')->result_array();        $count = $this->db->where($where)->count_all_results('t_gm');        $pro_id = array_column($rows,'pro_id');        $user_id = array_column($rows,'created_man');        $store_id = array_column($rows,'store_id');        $pro_id = $pro_id?array_filter($pro_id,function($val) {return !empty($val);}):[0];        $user_id = $user_id?array_filter($user_id,function($val) {return !empty($val);}):[0];        $store_id = $store_id?array_filter($store_id,function($val) {return !empty($val);}):[0];        $product =  $this->db->query("SELECT * FROM `cd_product` WHERE `id`  IN (".implode(',',array_unique($pro_id)).") ")->result_array();        $product_arr = [];        $sku = [];        $url_id = [];        foreach($product as $v){            $product_arr[$v['id']] = $v;            $sku[$v['cd_id']]  = "'".$v['cd_id']."'";            $url_id[$v['url_id']]  = $v['url_id'];        }        $sku = $sku?$sku:[0];        $url_id = $url_id?$url_id:[0];        $ean =  $this->db->query("SELECT * FROM `t_ean` WHERE `sku`  IN (".implode(',',array_values($sku)).") ")->result_array();        $ean_arr = [];        foreach($ean as $v) $ean_arr[$v['sku']] = $v;        $category =  $this->db->query("SELECT * FROM `t_collection_set` WHERE `id`  IN (".implode(',',array_values($url_id)).") ")->result_array();        $category_arr = [];        foreach($category as $v) $category_arr[$v['id']] = $v;        $user =  $this->db->query("SELECT * FROM `t_user` WHERE `id`  IN (".implode(',',array_unique($user_id)).") ")->result_array();        $user_arr = [];        foreach($user as $v) $user_arr[$v['id']] = $v;        $store =  $this->db->query("SELECT * FROM `store` WHERE `id`  IN (".implode(',',array_unique($store_id)).") ")->result_array();        $store_arr = [];        foreach($store as $v){            if($v['brand_id']) $v['brand'] = $this->db->query("SELECT * FROM `t_brand` WHERE `id`  IN (".$v['brand_id'].") ")->result_array();;            $store_arr[$v['id']] = $v;        }         foreach($product_arr as &$v){            $v['ean'] = isset($ean_arr[$v['cd_id']])?$ean_arr[$v['cd_id']]:'';            $v['category'] = isset($category_arr[$v['url_id']])?$category_arr[$v['url_id']]:'';        }        foreach($rows as &$v){            $v['checked'] = false;            $v['product'] = isset($product_arr[$v['pro_id']])?$product_arr[$v['pro_id']]:'';            $v['user'] = isset($user_arr[$v['created_man']])?$user_arr[$v['created_man']]:'';            $v['store'] = isset($store_arr[$v['store_id']])?$store_arr[$v['store_id']]:'';        }        $data['data'] = $rows;        $data['total'] = intval($count);                echo json_encode($data);        exit;     }    public function del(){        $post = $this->input->post(NULL,true);        if($this->db->where(['id'=>$post['id']])->where_in('status',[1])->select('id')->get('t_gm')->result()){            re_json([], 1, '该状态不能删除');        }elseif($post['id']){            $gm = $this->db->where(['id'=>$post['id']])->get('t_gm')->row_array();            $this->db->where(['id'=>$post['id']])->delete('t_gm');            $this->db->where(['id'=>$gm['pro_id']])->update('cd_product',['gmer_id'=>'']);            re_json([], 0, '删除成功');        }else{            re_json([], 1, '删除失败');        }    }    public function delAll(){        $post = $this->input->post(NULL,true);        if($this->db->where_in('id',$post['id'])->where_in('status',[1])->select('id')->get('t_gm')->result()){            $res['code']   =0;            re_json([], 1, '该状态不能删除');        }elseif($post['id']){            $gms = $this->db->where_in('id',$post['id'])->get('t_gm')->result_array();            $this->db->where_in('id',$post['id'])->delete('t_gm');            foreach($gms as $gm){                $this->db->where(['id'=>$gm['pro_id']])->update('cd_product',['gmer_id'=>'']);            }                        re_json([], 0, '删除成功');        }else{            re_json([], 1, '删除失败');        }    }    public function getSaleList(){        $users = $this->db->select('username,id')->get('t_user')->result_array();        exit(json_encode($users));    }    public function getCategoryist(){        $category = $this->db->select('*')->get('t_collection_set')->result_array();        exit(json_encode($category));    }}